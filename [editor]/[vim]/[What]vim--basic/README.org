* [What]vim --> basic
[[vimcdoc.sourceforge.net/doc/usr_toc.html][vim 参考手册]]
** 基本知识
*** 脚本
vim 的设置可以写入脚本文件中来达到批量配置的目的, 在 vim 中使用 =:scriptnames= 命令查看作用的脚本及其路径.

** 基本操作
*** 基本快捷键操作

基本快捷操作命令 *前面* 都是可以加入一个数字, 代表此命令重复执行的次数.

通常在数字的前面还可以加入其他的命令, 比如 =d4w=, 代表删除 4个单词.

使用这些组合技巧的法则除了记忆外, 更多的是大胆的尝试!有 =u= 在, 尽管尝试!

**** 插入与改动(在 Normal 模式中使用)
| 快捷键/命令 | 说明                                                          |
|-------------+---------------------------------------------------------------|
| i           | 在当前光标所在 *字符前* 插入编辑                              |
| I           | 在当前关标所在 *行首* 插入编辑                                |
| a           | 在当前光标所在 *字符后* 插入编辑                              |
| A           | 在当前光标所在 *行尾* 插入编辑                                |
| o           | 在当前光标所在 *行下插入新行* 并编辑                          |
| O           | 在当前光标所在 *行上插入新行* 并编辑                          |
|             |                                                               |
| ~           | 修改光标下 *字符的大小写,并移动到下一个字符*                                      |
| cw          | 修改一个词, =c= 与 =d= 一样,后面可以跟很多种命令              |
| x           | 删除当前 *光标所在的字符*, 与 =dl= 一样                       |
| X           | 删除当前 *光标所在的左边的字符* , 与 =dh= 一样                |
| D           | 删除当前 *光标所在的字符直到行尾*, 与 =d$= 一样               |
| daw         | 删除当前 *光标所在的单词*, =das= 删除 *光标所在的句子*.       |
| cis         | 修改当前 *光标所在的句子,不包括句子后的空白*, =cas= 包括空白. |
| C           | 修改当前 *光标所在的字符直到行尾*, 与 =c$= 一样               |
| s           | 修改当前 *光标所在的字符*, 与 =cl= 一样                       |
| S           | 修改当前 *光标所在的行*, 与 =cc= 一样                         |
| dd          | 删除当前 *光标所在的行*                                       |
| cc          | 删除当前 *光标所在的行, 保留缩进,并进入编辑模式*              |
| yy          | 拷贝当前 *光标所在的行*, 与 =Y= 一样                          |
| "\*yy       | 拷贝一行到剪切板                                              |
| "\*p        | 从剪切板粘帖                                                  |
| J           | 删除当前 *光标所在行的换行符*, 也就是将此行与下一行拼接为一行 |
| r           | 替换当前光标处的字符, 并自动退回 Normal 模式                  |
| R           | 替换当前光标处开始的字符, 直到 <ESC> 退回 Normal 模式         |
| .           | 重复最后一次的修改操作                                        |
| p           | 插入缓存的内容到光标后面, 使用 =xp= 即可交换两个字符          |
| P           | 插入缓存的内容到光标前面                                      |
|             |                                                               |
| u           | 撤销上次操作                                                  |
| CTRL-R      | 重做刚才撤销的操作, 是 *撤销的撤销*                           |
| U           | 消除对 *光标所在行的编辑操作*, 也就是行撤销                   |
|             |                                                               |
| :e!         | 放弃当前文件的更代并 *重新装载当前文件*                       |
|             |                                                               |
| CTRL-G      | 显示正在编辑的文件名称,以及当前光标所处的位置                 |
|             |                                                               |
**** 可视操作(在 visual 模式中使用)
| 快捷键 | 说明                                                         |
|--------+--------------------------------------------------------------|
| v      | 进入可视模式, 'V' 进入按行选择的可视模式                     |
| CTRL-v | 进入块选择可视模式                                           |
| o      | 在选择的块中移动光标到另一端, O 用于在块可视的同一行另一个角 |
| as     | 选中一个句子                                                       |

**** 移动(在 Normal 模式中使用)
| 快捷键 | 说明                                                                      |
|--------+---------------------------------------------------------------------------|
| w      | 移动到 *下一个单词的首字符上*, 切换为大写, 则以空格分隔的字符串为最小单位 |
| b      | 移动到 *前一个单词的首字符上*, 切换为大写, 则以空格分隔的字符串为最小单位 |
| e      | 移动到 *下一个单词的尾字符上*, 切换为大写, 则以空格分隔的字符串为最小单位 |
| ge     | 移动到 *前一个单词的尾字符上*, 切换为大写, 则以空格分隔的字符串为最小单位 |
| $      | 移动到光标所在 *行尾*                                                     |
| ^      | 移动到光标所在 *行的第一个非空白字符上*                                   |
| 0      | 移动到光标所在 *行首*                                                     |
| f char | 向后移动到 char 字符上, F 则为向前移动, 使用 ';' 重复, ','  为反向重复.   |
| t char | 向后移动到 char 字符的 *前一个字符*, T 为向前, ';' 重复, ',' 反向重复     |
| %      | 跳转到匹配的符号上去, *当前面接数字时, 代表移动到文件的百分之多少的位置*  |
| G      | 加数字,代表跳转到对应行去.  不加数字, 跳转到最后一行                      |
| gg     | 跳转到第一行                                                              |
| CTRL-u | 向上滚动半屏                                                              |
| CTRL-d | 向下滚动半屏                                                              |
| CTRL-e | 向上滚动一行                                                              |
| CTRL-y | 向下滚动一行                                                              |
| CTRL-f | 向下滚动一屏                                                              |
| CTRL-b | 向上滚动一屏                                                              |
| zz     | 将光标所在行, 置于屏幕中央                                                |
| zt     | 将光标所在行, 置于屏幕顶端                                                |
| zb     | 将光标所在行, 置于屏幕底端                                                |
| H      | 移动光标到当前视图顶部                                                    |
| M      | 移动光标到当前视图中部                                                    |
| L      | 移动光标到当前视图尾部                                                    |
| ``     | 将光标定位到跳转前的位置,与 =marker= 联合使用                             |
| `"     | 跳转到上次编辑的位置                                                      |
| `[     | 跳转到最后一次修改的起始位置                                              |
| `]     | 跳转到最后一次修改的结束位置                                              |
| [#     | 跳转到 #if, ']#' 为跳转到 #else 或 #end                                   |
| [[     | 跳转到上一个代码块首, '[]'跳转到上一个代码块尾                            |
| ]]     | 跳转到下一个代码块首, ']['跳转到下一个代码块尾                            |
| [/     | 跳转到注释首, ']/' 跳转到注释尾                                           |
| CTRL-O | 跳转到之前的位置                                                          |
| CTRL-I | 跳转到较新的位置                                                          |
| :marks | 查看标记列表                                                                    |

**** 查找(在 Normal 模式中使用)
| 快捷键/命令     | 说明                                                                                                  |
|-----------------+-------------------------------------------------------------------------------------------------------|
| /word           | 查找 *包含* word 的字符串, ' . * [ ] ^ % / \ ? $ ' 有特殊含义, 查找这些字符需要在它们前面加上 '\'转义 |
| :set ignorecase | 查找不区分大小写, =:set noignorecase= 关闭                                                            |
| *               | 取得光标上的单词,并进入向下查找模式. '#' 使用向上查找                                                 |
| /\<word\>       | '\<' '\>' 分别代表匹配头部和尾部                                                                      |
| :set hlsearch   | 高亮查找的字符串, =:set nohlsearch= 关闭                                                              |
| :nohlsearch     | 仅仅 *去掉本次高亮显示*.                                                                              |
| :set incsearch  | 在输入字符串过程中就显示匹配点                                                                        |
| :set nowrapscan | 找到文件两端后停止查找                                                                                |
|                 |                                                                                                       |

**** 退出/帮助(在 Normal 模式中使用)
| 快捷键/命令        | 说明                                  |
|--------------------+---------------------------------------|
| ZZ                 | 保存并关闭当前文件                    |
| :q!                | 放弃当前文件的修改并关闭当前文件      |
| :help  something   | 获取某个主题的帮助(退出帮助使用 =ZZ=), 关于如何使用 help, 使用 =:help helphelp= |
|                    |                                       |

*** 代码合并(vimdiff)
除了使用 git, 使用 vimdiff 来比对个别文件, 实现合并相当方便.

- 在一开始启动 vim 时, 使用命令 =vim -d <file1> <file2>= 或 =vimdiff <file1> <file2>=
- 在使用git的情况下, 使用命令 =git conifg --global diff.tool vimdiff=
- 在 vim 已经打开的情况下, 使用命令 =:diffthis= 打开比对功能, 使用 =:diffoff= 关闭比对.
| 快捷键 | 意义                                 |
|--------+--------------------------------------|
| do     | 在当前光标处, 将参考文件内容合并过来 |
| dp     | 在当前光标处, 将此处内容合并过去     |
| ]c     | 跳到下一个有差异的位置               |
| [c     | 跳到上一个有差异的位置               |
** 基本配置
*** 基本设置
| 命令          | 说明                             |
|---------------+----------------------------------|
| :set showmode | 在编辑器下方显示当前处于什么模式 |
| :set number   | 显示绝对行号, =set nonumber= 关闭 |
| :set ruler    | 在窗口右下角显示光标位置          |
|               |                                   |
** 组合高级功能
*** 宏录制
宏录制可以记录一段操作, 然后重复这一操作.

**** 开始与结束
vim 通过在 normal 模式下按下 =q= 开始录制, 然后输入一个寄存器(a ~ z 的任意一个字母),则开始使用此寄存器开始录制,与此同时屏幕左下角会显示 =recording= 提示.

在操作完成后, 再次按下 =q= 结束录制. 
**** 调用
- @ + 寄存器 : 重复依次宏
- @ + @ : 重复上次使用的宏
- <num> + @ + 寄存器 : 重复宏 <num> 次
** 疑难杂症
*** vim 打开部分文件无法高亮
- 描述
在偶然的某个时间打开以前打开过的文件后, 无法语法高亮了.
- 解决
将 =~/.vimviews/= 文件夹下清空即可.
