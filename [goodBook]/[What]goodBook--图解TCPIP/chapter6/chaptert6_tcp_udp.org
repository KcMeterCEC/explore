#+TITLE: [What]图解TCPIP_TCP&UDP
#+DATE: <2018-08-12 日> 
#+TAGS: tcpip
#+LAYOUT: post
#+CATEGORIES: book,图解TCPIP(入门)
#+NAME: <book_图解TCPIP_chapter6_tcpip_TCPUDP.org>
#+OPTIONS: ^:nil
#+OPTIONS: ^:{}

理解传输层常用的TCP(Transmission Control Protocol)与UDP(User Datagram Protocol)协议。
#+BEGIN_HTML
<!--more-->
#+END_HTML
TCPIP通过IP、端口号、以及协议号来确定要发送的目的计算机以及运行于其上的应用程序。
* TCP
TCP是面向连接的、可靠的流协议。
- TCP用于在传输层有必要实现可靠传输的情况。
** 通过序列号与确认应答提高可靠性
- 当发送端的数据到达接收主机时，接收端主机会返回一个已收到的消息同喜，这称为应答
  + 当发送端在一定时间内没有等到确认应答，发送端就可以认为数据已经丢失，并进行重发
    + 如果是从机确实没有接收到数据，那么发送端第二次发送将会接收。如果是从机的应答包被丢失，那么发送端第二次发送数据将会被丢弃
- 在以上基础之上，为发送数据的每个字节都表上号码，接收端查询接收TCP首部的序列号和数据长度，将自己下一步应该接收的序列号作为确认应答返送回去
* UDP
UDP是不具有可靠性的数据包协议，更多的处理交给上层应用去完成。
- UDP可以确保发送消息的大小，但不能保证接收端一定可以接收到这么多的数据。
- UDP主要用于高速传输和实时性有较高要求的通信或广播通信。
  + 包总量较少的通信(DNS、SNMP等)
  + 视频、音频等多媒体通信
  + 限定于LAN等特定网络中的应用通信
  + 广播、多播通信
* 端口号
数据链路和IP中的地址，分别指的是MAC地址(识别同一链路中不同的计算机)和IP地址(识别TCP/IP网络中互连的主机和路由器)。

在传输层中的地址指的是端口号，用于识别同一台计算机中进行通信的不同应用程序，也称为程序地址。
** 端口号的确定
- 标准既定的端口号: 事先约定好的端口号，客户端对应端口号进行对应操作即可( *不同的传输协议可以使用相同的端口号* )
  + 事先约定的端口号有: 0 ~ 49151,其中0~1023是知名端口号
    + [[https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers][wiki]] 上列出了这些端口号对应的意义
- 时序分配法: 由操作系统来自动分配，应用程序不用关心
  + 随机分配端口号有: 49152 ~ 65535
