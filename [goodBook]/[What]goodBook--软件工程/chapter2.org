#+TITLE: [What]软件工程_个人技术和流程
#+DATE: <2018-01-21 Sun> 
#+TAGS: 软件工程
#+LAYOUT: post
#+CATEGORIES: book,软件工程
#+NAME: <book_se_chapter2.org>
#+OPTIONS: ^:nil
#+OPTIONS: ^:{}

* 单元测试
单元测试是为了保证一个软件模块是否稳定，功能是否覆盖完全且正确无误的测试方式。

无论是嵌入式系统还是上层应用软件，其测试的基本思想都是：将软件模块看成一个黑盒，通过向黑盒输入一个参数，然后检验黑盒输出是否符合预期。

#+BEGIN_HTML
<!--more-->
#+END_HTML

有几个需要注意的是：
1. 在写代码的同时就得需要增加相应的测试代码，而不是系统开发完成后再来增加测试代码。
2. 每完成一个模块以及其相应的单元都需要测试，不要等到最后再来测试
3. 测试如果报告错误则肯定是测试代码或应用代码的问题，但如果测试报告完成正确，也不能代表系统没有问题。

** 嵌入式系统单元测试
在嵌入式系统中，无论是跑裸机还是上系统，只要做好与硬件底层驱动的分层。那么应用代码就可以完全在PC端完成模拟，然后来做功能性的测试。

对于底层硬件的测试，才需要实际交叉编译到目标板上再测试。方法为：
1. 实现一个简单的shell，可以通过命令行的方式调用需要测试的模块和输入参数，并返回执行的结果。
2. 目标板通过串口、网口或USB等接口与PC端连接。
3. PC端通过Python来完成测试代码，经过字符串解析来验证功能模块是否运行正常。
4. 最终生成测试报告，开发人员通过报告来判断。
** 好的单元测试的标准
- 单元测试应该在最基本的功能/参数上验证程序的正确性：单元测试应该是基于一个最小的可测试模块，然后在此基础上测试更大的模块
- 单元测试必须由代码的作者来编写
- 单元测试过后，机器状态保持不变： 为了避免单元测试之间的干扰，单元测试必须保证每次测试过后，机器的状态恢复到最初
- 单元测试的运行时间要尽量短
- 单元测试应该产生可重复、一致的结果：为了发现的错误能够复现，这样才能捕捉
- 单元测试应该保持独立性：测试之间不能相互依赖
- 单元测试应该覆盖所有的代码路径：要尽量覆盖模块中的函数、语句、分支、条件
- 单元测试应该集成到自动测试的框架中
- 单元测试必须和产品代码一起保存和维护
* 回归测试(Regression Test)
在软件项目中，如果一个模块或功能以前是正常工作的，但是在一个新的构建中出了问题，那么这个模块就出现了一个退步(Regression)，需要运行单元测试来检测原因。

在项目最后要发布稳定版时，还需要运行一次全面的单元测试，以确认是否还有问题没有被修复。
* 代码效能分析
通过效能分析工具，可以查看代码的运行效率，以优化部分代码达到使代码运行时间更短的目的。
* 个人开发流程
通过真实记录自己在软件项目中各个部分所花的时间，来检验自己时间规划是否合理。

一般来说：应该花很多的时间在需求分析和测试上，实际的编码工作则不应该占用太多时间。

问题：
1. 在实际的工作中，尤其是小公司团队。一个人要负责好几个产品的开发和维护，在开发一个产品的同时往往被其他的产品打断。这样的时间该如何计算更为精确？
2. 在嵌入式团队中，一个人往往不仅仅是软件工程师，还兼做了一部分硬件测试及调试，这个时间又该如何计算？

| 个人开发流程(Personal Software Process) |
|-----------------------------------------|
| 计划                                    |
| --估计任务需要的时间                    |
| 开发                                    |
| --分析需求                              |
| --生成设计文档                          |
| --设计复审                              |
| --代码规范                              |
| --具体设计                              |
| --具体编码                              |
| --代码复审                              |
| --测试                                  |
| 记录用时                                |
| 测试报告                                |
| 计算工作量                              |
| 事后总结                                |
| 提出过程改进计划                        |
