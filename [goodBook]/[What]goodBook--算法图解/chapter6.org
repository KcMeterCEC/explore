#+TITLE: [What]算法图解_广度优先搜索
#+DATE: <2018-03-02 Fri> 
#+TAGS: 数据结构与算法
#+LAYOUT: post
#+CATEGORIES: book,算法图解(入门)
#+NAMA: <book_算法图解_chapter6.org>
#+OPTIONS: ^:nil
#+OPTIONS: ^:{}

介绍 =图= 的相关概念，以及其对应算法。
#+BEGIN_HTML
<!--more-->
#+END_HTML
* 什么是图
图是用于抽象一组连接，以图形化的方式展现不同的东西是如何相连的（比如到达目的地的路径），其中：
- 每个点称为 =节点=
- 节点与节点之间的连接称为 =边=
- 一个节点与另一个节点的 *直接连接* ，被称为 =邻居=
  + 当一个节点A单向与另一个节点B相连,但B没有指向A. 这称为 *B是A的邻居，但A不是B的邻居*
  + 当两个节点相互指向对方或没有箭头指向时才 *互为邻居*
* 什么是广度优先搜索
=广度优先搜索(breadth-first search, BFS)= 是用于图的查找算法， 可以找出两样东西之间的最短距离，比如：
- 编写国际跳棋AI，计算最少走多少步就可以获胜
- 编写拼写检查器，计算最少编辑多少个地方就可以将错拼的单词改成正确的单词
- 根据你的人际关系网络找到关系最近的医生
- 地图app计算到达目的地的最短乘车路径

它可以回答两类问题：
1. 从节点A出发，有前往节点B的路径吗？
2. 从节点A出发，前往节点B的最短路径是什么？

搜索的思路：
1. 将节点按照 *相对起点由近到远的方式依次放入队列*
2. 依次从队列取出节点进行路径分析

** 算法实现
*** 计算图中是否有满足条件的节点
1. 创建一个队列，用于存储要检查的邻居节点
2. 从队列中取出一个节点
3. 检查节点是否满足要求
4. 如果满足要求则退出否则将此节点的所有邻居节点都加入队列然后回到步骤二
5. 当队列为空时，则代表没有符合要求的节点



