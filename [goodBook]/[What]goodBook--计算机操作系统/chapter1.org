#+TITLE: [What]计算机操作系统_操作系统引论
#+DATE: <2018-03-06 Tue> 
#+TAGS: 计算机操作系统
#+LAYOUT: post
#+CATEGORIES: book,计算机操作系统
#+NAME: <book_计算机操作系统_chapter1.org>
#+OPTIONS: ^:nil
#+OPTIONS: ^:{}

回顾一下操作系统基本知识，温故而知新。
#+begin_example
操作系统：是一组控制和管理计算机硬件和软件资源，合理地对各类作业进行调度，以及方便用户使用的程序的集合。
#+end_example
#+BEGIN_HTML
<!--more-->
#+END_HTML
* 操作系统的目标和作用
** 操作系统的目标
*有效性和方便性是设计操作系统时最重要的两个目标。*
*** 有效性
操作系统的有效性包含如下两方面的含义：
- 提高系统资源利用率
  + CPU和I/O设备能得到有效利用，避免CPU死等
  + 内存和外存合理分配，避免浪费
- 提高系统的吞吐量
  + 合理组织计算机的工作流程，改善资源利用率，加速程序运行，缩短程序的运行周期。
*** 方便性
用户使用操作系统提供的接口，避免了直接与硬件打交道，提高了用户体验。
*** 可扩充性
OS必须具有很好的可扩充性，以适应计算机硬件、体系结构以及应用发展的要求。
*** 开放性
为了使不同的设备能够通过网络加以集成化，并能正确、有效的协同工作，实现应用的可移植性和互操作性，要求操作系统必须提供统一的开放环境。

开放性是指系统能遵循世界标准规范，特别是遵循开放系统互联(OSI)国际标准，遵循国际标准所开发的硬件和软件，均能彼此兼容，方便互联。
** 操作系统的作用
*** OS作为用户与计算机硬件系统之间的接口
OS处于用户与计算机硬件系统之间，用户通过OS来使用计算机系统。

用户可以通过以下3种方式使用计算机：
- 命令方式
  + 通过命令行输入命令取得操作系统服务
- 系统调用方式
  + 用户在自己的应用程序中调用操作系统提供的调用接口获取服务
- 图形、窗口方式
*** OS作为计算机系统资源的管理者
OS主要对以下4类资源进行有效管理：
- 处理器：分配和控制处理器，充分利用
- 存储器：内存的分配与回收
- I/O设备：分配与操纵
- 文件：存取、共享、保护
*** OS实现了对计算机资源的抽象
OS是铺设在计算机硬件上的多层系统软件，不仅增强了系统的功能，还隐藏了对硬件操作的细节，
由它们实现了对计算机硬件操作的多个层次的抽象。

对一个硬件在底层进行抽象后，在高层还可以再次对该资源进行抽象，成为更高层的抽象模型。
随着抽象层次的提高，抽象接口所提供的功能就越来越强，用户使用就越来越方便。

** 推动操作系统发展的主要动力
*** 不断提高计算机资源的利用率
早期计算机系统特别昂贵，必须千方百计地提供计算机系统中各种资源的利用率。
*** 方便用户
*** 器件的不断更新换代
硬件设备的快速发展，促进了操作系统的发展。
*** 计算机体系结构的不断发展
* 操作系统的发展过程
** 无操作系统的计算机系统
*** 人工操作方式
- 从第一台计算机诞生(1945年)到20世纪50年代中期的计算机，属于第一代计算机。
  + 由程序员以穿孔的纸带装入纸带输入机然后才启动设备的编程方式
    + 用户独占全机，仅仅支持单用户
    + CPU等待人工操作，其利用率低
*** 脱机输入/输出方式
为了解决人机矛盾以及CPU和I/O设备之间的速度不匹配矛盾，20世纪50年代末出现了脱机输入/输出(Off-Line I/O)技术。
  + 外围机 *事先* 将装有用户程序和数据的纸带装入输入机并输入到磁带上，当CPU需要这些程序和数据时，再从磁带上高速调入内存
    + 减少了CPU的空闲时间
    + 提高了 I/O 速度

由于程序和数据的输入和输出都是在外围机控制下完成的，在脱离主机的情况下进行的，所以称为脱机输入/输出方式。
** 单道批处理系统 
20世纪50年代中期发明了晶体管，替代了第一代的真空管，从而出现了第二代计算机。

系统中配置了监督程序(Monitor)，它控制磁带上的程序能够连续的运行。

由于系统对作业的处理都是成批地进行的，且在内存中始终只保持一道作业，故称为 =单道批处理系统(Simple Batch Processing System)= 。

具有以下特征：
- 自动型
- 顺序性
- 单道性
** 多道批处理
20世纪60年代中期，人们开始利用小规模集成电路来制作计算机，生产处第三代计算机。
  + IBM生产的第一台小规模集成电路计算机--360机

此时引入了多道程序设计技术，形成了 =多道批处理系统(Multiprogrammed Batch Processing System)= 。
  + 作业并排成一个队列，由调度器选择几个队列根据情况切换运行。
    + 提高CPU利用率，在一个程序进行I/O操作时，切换到其他程序来占用CPU
    + 提高内存和I/O设备的利用率。
    + 增加系统吞吐量
#+begin_example
系统吞吐量是指：系统在单位时间内所完成的总工作量
#+end_example

多道批处理的优缺点：
- 资源利用率高
- 系统吞吐量大
- 平均周转时间长
  + 从作业进入系统开始，直至完成并退出系统为止所经历的时间。
- 无交互能力
  + 用户一旦提交作业，直至作业完成，用户都不能与自己作业进行交互，这对修改和调试程序极不方便。

多道批处理系统需要解决的问题：
- 处理机管理问题
  + 合理分配CPU资源
- 内存管理问题
  + 内存合理利用以及内存访问权限
- I/O设备管理问题
  + 提高设备利用率
- 文件管理问题
  + 方便用户的同时又能保证数据安全
- 作业管理问题
  + 任务管理
** 分时系统
=分时系统(Time Sharing System)= 与多道批处理系统之间有着截然不同的性能差别，它能很好的将一台计算机提供给 *多个用户同时使用* 。

用户需求具体表现：
- 人机交互
  + 用户能很方便的调试程序
- 共享主机
  + 多个用户共享一台计算机
- 便于用户上机

第一台真正分时操作系统(CTSS,Compatible Time Sharing System)是由麻省理工学院开发的。

分时系统实现中的关键问题：
- 及时接收
- 及时处理

分时系统的特征：
- 多路性
- 独立性：每个用户各占一个终端，互不干扰。
- 及时性：相比多道批处理而言，能在很短时间获得响应
- 交互性
** 实时系统
=实时系统(Real Time System)= 是指系统能及时响应外部事件请求，在 *规定的时间内完成对该事件的处理* ，并控制所有实时任务协调一致地运行。

应用需求：
- 实时控制：实时采集数据并控制设备
- 实时处理信息：实时处理及检索信息

实时任务的分类：
- 按任务执行时是否呈现周期性来划分
  + 周期性实时任务
    + 周期性的调用
  + 非周期性实时任务
    + 在某种条件下触发，具有开始截止时间和完成截止时间两部分要求
- 根据对截止时间的要求来划分
  + 硬实时任务(Hard real-time Task)
    + 系统必须满足任务对截止时间要求
  + 软实时任务(Soft real-time Task)
    + 偶尔错过了任务的截止时间，对系统影响不大

实时系统与分时系统特征的比较：
- 多路性
  + 实时系统多路性主要表现在系统周期性地对多路现场信息采集对设备控制
  + 分时系统多路性则与用户情况有关，时多时少
- 独立性
  + 实时系统对用户、信息和控制请求都是彼此独立
  + 分时系统对用户独立
- 及时性
  + 实时信息系统与分时类似，都是以人所能接收的等待时间来确定
  + 实时控制系统以控制对象所要求的开始截止时间或完成截止时间来确定
- 交互性
  + 实时信息处理系统与人交互仅限于访问特定专用服用
  + 分时系统向终端用户提供多种服务
- 可靠性
  + 分时系统相比实时系统可靠性低
** 微机操作系统的发展
配置在微型机上的操作系统称为微机操作系统。

*** 单用户单任务操作系统
单用户单任务操作系统含义：只允许一个用户上机且只运行用户程序作为一个任务运行

- CP/M
  + 主要用于8位微机
- MS-DOS 
  + 主要用于16位和32位机
*** 单用户多任务操作系统
含义：只允许一个用户上机，但允许用户将程序分为多个任务并发运行。

- Windows 1.0~xp 
*** 多用户多任务操作系统
含义：允许多个用户通过 *各自终端同时* 使用同一台机器，每个用户程序可以分为多个任务并发执行。
- UNIX like 
- Windows 7~
* 操作系统的基本特性
并发性是操作系统最重要的特征，其它三个特征都是以并发特征为前提的。
** 并发性
*** 并行性与并发性
- 并行性：多个任务同时进行
- 并发性：微观上，多个任务交替进行，宏观上看起来就像是在同时进行一样
*** 引入进程
引入进程的目的，就是为了使多个程序能并发执行，并且让各个进程看起来像是独占整个系统。
*** 引入线程
一个进程中包含多个线程，线程共享进程资源。

进程作为分配资源的基本单位，线程作为独立运行和独立调度的基本单位。
** 共享性
所谓共享(Sharing)，是指系统中的资源可供内存中多个并发执行的进程（线程）共同使用，把这种资源共同使用的方式称为资源共享，或资源复用。

资源共享方式有以下两种：
- 互斥共享方式：一段时间内只允许一个进程（线程）访问临界区。
- 同时访问方式：允许一段时间内由多个进程（线程）同时访问。
** 虚拟技术
操作系统中的 =虚拟(Virtual)= 是指通过某种技术把一个物理实体变为若干个逻辑上的对应物。物理实体是实际存在的，后者仅仅是用户感觉上的东西。

用于实现虚拟的技术称为虚拟技术，操作系统利用了两种方式实现虚拟技术：
*** 时分复用
- 虚拟处理机技术
  + 利用并发技术，多个进程宏观地同时运行，每个进程都感觉独占了CPU。
- 虚拟设备技术
  + 将一台物理I/O设备虚拟为多态逻辑上的I/O设备，并允许每个用户占用一台逻辑上的I/O设备。
*** 空分复用
- 虚拟磁盘技术
  + 将一台硬件虚拟为多台虚拟磁盘，虚拟磁盘总量等于物理硬盘存储值
- 虚拟内存技术
  + 多个进程不用关心实际内存大小而运行，物理内存通过分段映射的技术来虚拟大内存。
** 异步性
进程是以人们不可预知的速度向前推进的，就是程序的 =异步性(Asynchronism)= 。

* 操作系统的主要功能
操作系统的主要任务：为多道程序运行提供良好的运行环境，以保证多道程序能有条不紊且高效地运行，
并能最大程度地提高系统中各种资源利用率和方便用户的使用。

为了完成这个任务，操作系统具有以下主要功能：
** 处理器管理
*** 进程控制
- 为程序创建进程
- 撤销已结束的进程
- 控制进程在运行过程中的状态转换
*** 进程同步
- 对临界资源的访问需要互斥
- 对共同完成的任务需要同步
*** 进程通信
*** 调度
- 作业调度
- 进程调度

** 存储器管理
*** 
