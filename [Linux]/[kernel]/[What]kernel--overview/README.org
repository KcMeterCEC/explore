* [What] kernel --> overview

- 参考书籍 《深入理解linux 内核》(version:2.6.11)
** 基本概念
*** 内核体系结构
[[./kernelMode.bmp][wiki图解]]
**** 微内核(microkernel)
微内核只需要内核有基本的支持(同步,调度,通信机制等),其他的系统服务运行于其他进程中.

优点:
1. 微内核的这种设计使得内核更加模块化
2. 其它服务进程如果崩溃了,并不会导致基本内核崩溃
3. 不需要执行的系统服务进程可以被调出或撤销

缺点:
1. 进程间通信效率低,导致整个系统的运行效率低
**** 宏内核(Monolithic kernel)
也叫集成式内核, 单内核. 此构架将整个内核功能(进程管理,内存管理等)都集成到一起, 相当于整个内核就是一个单一的进程.

在此基础上,为了内核能够动态的定制, 还加入了模块(module)机制,在运行时就可以装载和卸载模块.

优点:
1. 系统服务之间的调用就是函数调用,运行效率高.
2. 装载的模块调用效率依然很高.

缺点:
1. 当内核服务或模块崩溃, 可能会导致整个系统崩溃.


*** 内核执行进程路径
有以下几种情况会使CPU交错执行内核控制路径:
- 运行在用户态下的进程调用一个系统调用, 此时会进入到内核态, 如果内核控制路径证实这个请求无法立即满足. 内核就会选择一个新的进程投入运行. 这种情况下代表两个不同的进程正在执行.
- 进程在用户态下时CPU检测到一个异常,CPU在内核态处理完异常后重新回到用户态的进程.这种情况下代表控制路径执行的是同一个进程.
- 进程在用户态时, 发生了硬件中断, CPU进入内核态处理此中断, 然后回到用户态进程. 这种情况代表控制路径运行在同一进程的可执行上下文中.
- 在支持抢占式调度的情况下, 一个更高优先级的进程加入就绪队列, 此时当前进程就会被高优先级的进程打断.

