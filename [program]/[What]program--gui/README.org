#+TITLE: GUI方面使用总结
#+AUTHOR: kcmetercec
#+OPTIONS: ^:nil
* [What] program --> GUI

** GUI 的选择

目前将编程平台分为三类：

1. 基于裸机或者 RTOS 的单片机平台

首先考虑的必是优秀的国产 RTOS --> RT Thread, 如果单片机是 emwin 授权的那就使用 emwin，否则使用 rt thread配套的 RTGUI。

如果单片机资源不够，或者是RT Thread没有移植好的，那么可以考虑 FreeRTOS 或者是自己写个合作式调度器， 那么对应的GUI 就是**免费
且开源的GUI** --> [littlev](http://www.gl.littlev.hu/)

2. 基于 linux 的嵌入式平台

u-boot 使用 littlev

app 使用 miniGUI

3. 基于 linux / windows等系统的桌面应用

需求 *运行效率* 的使用 Qt

需求 *开发效率* 的使用 Python

** littlev

littlev 是免费且开源的基于 C 代码的 GUI，移植性相当强，并且其具有 PC 端仿真代码，大大提高了调试效率。

*** 安装仿真环境

**** 安装 SDL2

SDL2 是一个库，提供一个可以直接控制硬件的接口。
#+begin_example
apt-cache search libsdl2
sudo apt install libsdl2-2.0-0
sudo apt install libsdl2-dev
sudo apt install build-essential
#+end_example

**** 安装 eclipse

在官网下载 eclipse 时需要选择 *大连东软信息学院* 镜像站，提高下载速度。

在安装 eclipse 之前需要先安装 java 环境：

1. 懒人安装

#+begin_example
sudo apt install default-jdk
设置环境变量,  编辑文件 "~/.bash_aliases" 输入 "export JAVA\_HOME='/usr/lib/jvm/java-8-openjdk-amd64/jre/bin'"
#+end_example

2. 安装正式版本
#+begin_example
sudo add-apt-repository ppa:webupd8team/java
sudo apt update
sudo apt install oracle-java8-install  (可以安装 java6/7/8/9)
sudo apt install oracle-java8-set-default (可以安装 java6/7/8/9)
java -version (查看版本)
配置在各个 java 版本间切换， sudo update-alternatives --config java  , 星号代表正在使用的版本，输入编号即可选择
设置环境变量,  编辑文件 "~/.bash_aliases" 输入 "export JAVA\_HOME='/usr/lib/jvm/java-8-oracle/jre/bin'"
#+end_example

**** 下载 pc 仿真代码

#+begin_example
git clone https://github.com/littlevgl/proj_pc
cd proj_pc
git submodule init
git submodule update
#+end_example

**** 启动 eclipse 并导入 littlev 工程， 编译， 运行。
Close the start up window and go to =File->Import= choose
=General-Existing project into workspace=.  *Browse the root
directory* of the project and click Finish.

*** 移植到嵌入式linux

** Qt
*** Qt插件
**** QWT
     QWT 是一个绘图工具集, 具有很多已经写好的UI插件,大大提高开发效率.
***** 安装以及使用(windows)
****** 下载
在 [[https://sourceforge.net/projects/qwt/files/qwt/][QWT下载链接]] 中进入最新版的文件夹,然后下载 =.zip= 文件(源代码)以及 =.qch= 文件(帮助文档)即可.

解压 =.zip= 文件, *解压路径不能有中文*.
****** 设置Qt环境变量
检查windows环境变量中是否包含了Qt的bin路径 =set PATH=,如果没有则添加该路径
****** 编译和安装
在解压文件夹路径中依次运行命令: =qmake qwt.pro=, =mingw32-make=, =mingw32-make install=,最后默认文件的安装路径为: =C:\Qwt-xxx=.
****** 将库移入Qt路径中
| QWT路径                                  | QT路径                          |
|------------------------------------------+---------------------------------|
| lib/libqwt.a, lib/qwtd.a                 | mingwxx_xx/lib                  |
| lib/qwt.dll, lib/qwtd.dll                | mingwxx_xx/bin                  |
| plugins/designer/qwt_designer_plugin.dll | mingwxx_xx/plugins/designer     |
| include/**                               | mingwxx_xx/include/Qwt(new dir) |
****** 载入帮助文件
工具 -> 选项 -> 帮助 -> 添加 -> =.qch= 文件
****** 使用
- 新建一个widget项目
- 添加库文件路径
#+begin_example
#在 .pro 文件中加入库路径

DEFINES += QT_DLL QWT_DLL
LIBS += -L"C:\Qt\Qt5.8.0\5.8\mingw53_32\lib" -lqwtd
LIBS += -L"C:\Qt\Qt5.8.0\5.8\mingw53_32\lib" -lqwt
INCLUDEPATH += C:\Qt\Qt5.8.0\5.8\mingw53_32\include\Qwt
#+end_example
- *显示* 的用 =Qt Designer= 来打开 =.ui= 文件,拖入控件,编译即可


** miniGUI
*** 在 linux 中安装
**** 下载及解压
在 [[www.minigui.com/en/download/][minigui-download]] 中依次下载 =MiniGUI Core Lib(V3.0.12, Linux), MiniGUI Resource(V3.0.12), MiniGUI Samples(V3.0.12)=, 然后使用命令 =tar -zxf= 依次解压.
****  安装库
#+begin_example
#进入 minigui-res-be-3.0.12
./configure
sudo make install

#进入 libminigui-3.0.12-linux
#编辑文件 src/textedit/object.h
#将 "_va.va = va; " 修改为 "strcpy(_va.va, va);"
./configure
make
sudo make install
sudo ldconfig

#进入 mg-samples-3.0.12
./configure


#+end_example
   
