#+TITLE: [What]数据结构与算法 -> 二叉树
#+DATE:  <2019-02-28 四> 
#+TAGS: 数据结构与算法
#+LAYOUT: post 
#+CATEGORIES: program,数据结构与算法
#+NAME: <program_DS_binary_tree.org>
#+OPTIONS: ^:nil 
#+OPTIONS: ^:{}

课程：王争 --> <数据结构与算法之美>

理解树与二叉树。
#+BEGIN_HTML
<!--more-->
#+END_HTML
* 概念
** 树
[[./tree.jpg]]

上面便是一个树，与现实的树很类似：
- 每个元素称为一个 =节点= ，节点之间的连线组成 =父子关系=
  - 比如A是B的父节点，是E的子节点
- 没有父节点的节点就是 =根节点= ， 没有子节点的节点就是 =叶子节点= 
- 节点的高度 : 节点到叶子节点的 *最长路径（边数）*
  - 比如A节点的高度就是2
- 节点的深度 : *根节点* 到此节点的 *边数*
  - 比如C节点的深度就是2
- 节点的层数 : *根节点* 到此节点的 *节点个数* (节点深度 + 1)
  - 比如C节点的层数就是3
- 树的高度 : *根节点* 到叶子节点的 *最长边数*
  - 比如此树高度为3
** 二叉树
[[./binary_tree_overview.jpg]]

二叉树是相对上图的一个特例：
- 每个节点 *最多* 有两个叶子节点，称为 =左子节点= 和 =右子节点= 
- 当二叉树中除了叶子节点之外的所有节点都有两个节点且左右层数相等时，就是 =满二叉树= 
- 当满二叉树的右边比左边 *少一层* 且左边不要求子节点完整，就是 =完全二叉树= 
  



* 二叉树的存储
** 链式存储
** 数组存储
* 二叉树的遍历
