#+TITLE: [What]数据结构与算法 -> 数组
#+DATE:  <2018-10-22 Mon> 
#+TAGS: 数据结构与算法
#+LAYOUT: post 
#+CATEGORIES: program,数据结构与算法
#+NAME: <program_DS_array.org>
#+OPTIONS: ^:nil 
#+OPTIONS: ^:{}

课程：王争 --> <数据结构与算法之美>

以另一个角度看待数组。
#+BEGIN_HTML
<!--more-->
#+END_HTML
* 数组的定义
数组（Array）是一种 *线性表* 数据结构。它用一组 *连续* 的内存空间，来存储一组具有 *相同类型* 的数据。
- 线性表：数据的排列只有前后两个方向。所以数组、链表、fifo、栈等都属于线性表。
  + 对应的二叉树、图、堆由于其数据不是简单的前后方向，它们是非线性表。
- 连续内存空间的相同数据类型：基于这个特性才可以做到随机访问，以实现高效的读写。
  + 但对应的数据插入和删除操作则会有大量的数据搬移操作，效率较低。

计算机对数据的寻址公式为:
#+BEGIN_EXAMPLE
  array[index] = base_address + index * data_type_size
#+END_EXAMPLE
由以上公式可以知道数据的时间复杂度:
- 进行随机访问(读、写)操作: O(1)
- 进行有序查找操作: O(logn)
- 进行遍历查找操作: O(n)
- 进行数据的插入和删除操作: O(n)
  
虽然插入和删除操作效率较低，但仍然有一定的优化空间：
- 插入：当数据为无序存储时，要在位置i处插入值，那么可以将i原来的数据放在数据末尾，然后将新数据放入i
- 删除：当数据为无序存储时，要将位置i处的值删除，那么可以将数组末尾数据覆盖i处的值，并标记数组大小减一
* 实践

